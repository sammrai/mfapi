openapi: 3.0.0
info:
  title: マネーフォワード操作API
  version: 0.0.2
  description: |
    マネーフォワードMEのデータを操作するためのREST APIです。このAPIは、マネーフォワードMEの資産管理機能を拡張し、プログラムによる自動操作を可能にします。

    # ensureオプション（開発中）
    現状では、更新系API（追加、更新、削除など）では、2xx応答が返ってきても、それはサイトにリクエストを投げたことを示すだけで、実際に作成、更新、削除が行われたことの保証はされません。そのため、操作後にリソースの状態を確認し、変更が正確に反映されているかを確かめることが重要です。この確認プロセスを効率化するために、`ensure` オプションが推奨されます。`ensure` オプションを有効化すると、操作後にリソースの状態を自動的に確認する追加のリクエストが発行されますが、これにより全体のリクエスト量が増加し、応答時間が遅くなる可能性があります。また、、サイトへの追加的な負荷も考慮に入れる必要があります。クライアントの要件に応じて、`ensure` オプションの使用要否を検討してください。

  contact:
    url: https://github.com/sammrai/mfapi

servers:
  - url: http://192.168.32.70:3001
    description: Local server
  - url: http://localhost:3001/api
    description: Local machinie

paths:
  /accounts:
    get:
      tags: [口座]
      summary: 口座一覧
      description: 作成したカスタム口座一覧を取得できます
      responses:
        "200":
          description: A list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
  /accounts/{accountString}/assets:
    get:
      tags: [資産]
      summary: 資産一覧
      description: 口座内の資産を一覧で取得できます
      parameters:
        - name: accountString
          description: 口座の接続文字列
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 資産一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Asset"
        "500":
          description: サーバエラー
    post:
      tags: [資産]
      summary: 資産作成
      parameters:
        - name: accountString
          description: 口座の接続文字列
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetPost"
      responses:
        "201":
          description: 資産を作成しました
        "400":
          description: 入力パラメータが誤っています
        "409":
          description: 作成に失敗しました
        "500":
          description: サーバエラー

  /accounts/{accountString}/assets/{assetId}:
    delete:
      tags: [資産]
      summary: 資産削除
      parameters:
        - name: assetId
          description: 資産の一意識別子
          in: path
          required: true
          schema:
            type: string
        - name: accountString
          description: 口座の接続文字列
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: 資産を削除しました
        "409":
          description: 削除に失敗しました
        "404":
          description: 削除する資産が見つかりません
        "500":
          description: サーバエラー
    put:
      tags: [資産]
      summary: 資産変更
      parameters:
        - name: assetId
          description: 資産の一意識別子
          in: path
          required: true
          schema:
            type: string
        - name: accountString
          description: 口座の接続文字列
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: assetSubclassIdは変更することができず、変更前と同じにする必要があります。
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetPost"
      responses:
        "204":
          description: 資産を更新しました
        "400":
          description: 入力パラメータが誤っています
        "404":
          description: 更新する資産が見つかりません
        "409":
          description: 更新に失敗しました
        "500":
          description: サーバエラー

components:
  schemas:
    Asset:
      type: object
      properties:
        assetId:
          type: string
          description: 資産のユニーク識別子
          example: "rwR7x1J_fYqVP90bV7PpN3GFzOT9CQ3gW-pjg1u3CEI"
        assetSubclassId:
          $ref: "#/components/schemas/AssetSubclass"
        name:
          type: string
          description: 資産名
          example: "USD/JPY"
        value:
          type: number
          format: float
          description: 資産価値
          example: 100
        entriedPrice:
          type: number
          format: float
          description: システム登録時の価格
          example: 90
          nullable: true
        entriedAt:
          type: string
          description: システム登録日
          example: "2022/01/01"
          nullable: true
    AssetSubclass:
      type: string
      enum:
        - Cash
        - ElectronicMoney
        - OrdinaryDeposit
        - TimeDeposit
        - AccumulationTimeDeposit
        - ForeignCurrencyDeposit
        - DepositoryMoney_MRF
        - Deposit_Margin
        - Cryptocurrency
        - OtherDeposits
        - DomesticStock
        - USStock
        - ChinaStock
        - ForeignStock
        - UnlistedStock
        - OtherStocks
        - CreditMargin_Deposit
        - DomesticStock_Credit
        - USStock_Credit
        - ChinaStock_Credit
        - ForeignStock_Credit
        - OtherStocks_Credit
        - InvestmentTrust
        - ForeignInvestmentTrust
        - MidTermGovernmentBondFund
        - MMF
        - ForeignCurrencyMMF
        - OtherInvestmentTrust
        - GovernmentBond
        - CorporateBond
        - ForeignBond
        - StructuredBond
        - OtherBonds
        - SocialLending
        - FXMargin
        - OverTheCounterFX
        - Click365
        - OsakaFX
        - OtherFX
        - FuturesOPMargin
        - IndexFutures
        - IndexOP
        - CFD
        - ClickStock365
        - CommodityFutures
        - OtherFuturesOP
        - DomesticStock_StockOption
        - AccumulationTypeInsurance
        - Building_Home
        - Building_InvestmentBusiness
        - Land_Home
        - Land_InvestmentBusiness
        - NationalPension
        - WelfarePension
        - MutualAidPension
        - CorporatePension
        - WelfarePensionFund
        - NationalPensionFund
        - DefinedContributionPension
        - PrivatePension
        - Points_Miles
        - Automobile
        - PreciousMetals_Jewelry
        - OtherAssets
      description: 資産のサブクラスID
    AssetPost:
      allOf:
        - $ref: "#/components/schemas/Asset"
      required:
        - assetSubclassId
        - name
        - value
    Account:
      type: object
      properties:
        name:
          type: string
          description: 口座の名前
          example: カスタムテスト口座名
        id:
          type: string
          description: 口座の一意識別子
          example: 1oSPZ6UHFklEcqxptwmUi8AsOLXZ-c895CO9eXbmo9j
        subAccountIdHash:
          type: string
          description: 口座制御の一意識別子
          example: Slt9Ua10VeSgHLsvDDxmuHwNrufWSVgUc8Ntzl1yNxL
        accountString:
          type: string
          description: 口座の接続文字列
          example: 1oSPZ6UHFklEcqxptwmUi8AsOLXZ-c895CO9eXbmo9j@Slt9Ua10VeSgHLsvDDxmuHwNrufWSVgUc8Ntzl1yNxL
